#include <gccore.h>
#include <grrlib.h>
#include <ogc/lwp_watchdog.h>
#include <ogcsys.h>
#include <wiiuse/wpad.h>
#include <network.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

static void *xfb = NULL;
static GXRModeObj *rmode = NULL;

void Initialize()
{
    VIDEO_Init();
    WPAD_Init();
    rmode = VIDEO_GetPreferredMode(NULL);
    xfb = MEM_K0_TO_K1(SYS_AllocateFramebuffer(rmode));
    VIDEO_ClearFrameBuffer(rmode, xfb, COLOR_BLACK);
    VIDEO_Configure(rmode);
    VIDEO_SetNextFramebuffer(xfb);
    VIDEO_SetBlack(FALSE);
    VIDEO_Flush();
    VIDEO_WaitVSync();
    if(rmode->viTVMode & VI_NON_INTERLACE) VIDEO_WaitVSync();
}

void NetworkInit()
{
    if (net_init() == -1) {
        printf("Network initialization failed!\n");
        exit(1);
    }
    printf("Network initialized.\n");
}

int main(int argc, char **argv)
{
    Initialize();
    NetworkInit();

    int socket = net_socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
    if (socket < 0) {
        printf("Failed to create socket!\n");
        exit(1);
    }

    struct sockaddr_in server;
    server.sin_family = AF_INET;
    server.sin_port = htons(12345); // Use your server's port
    server.sin_addr.s_addr = inet_addr("192.168.1.100"); // Replace with your server's IP address

    if (net_connect(socket, (struct sockaddr*)&server, sizeof(server)) < 0) {
        printf("Connection failed!\n");
        exit(1);
    }

    char send_buffer[1024];
    char recv_buffer[1024];

    while(1) {
        WPAD_ScanPads();
        u32 pressed = WPAD_ButtonsDown(0);

        if (pressed & WPAD_BUTTON_HOME) break;

        // Send a message
        sprintf(send_buffer, "Hello from Wii!");
        net_send(socket, send_buffer, strlen(send_buffer), 0);

        // Receive a message
        int received = net_recv(socket, recv_buffer, sizeof(recv_buffer), 0);
        if (received > 0) {
            recv_buffer[received] = '\0';
            printf("Received: %s\n", recv_buffer);
        }

        VIDEO_WaitVSync();
    }

    net_close(socket);
    return 0;
}
